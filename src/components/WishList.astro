---
import DeleteIcon from "./resources/icons/DeleteIcon.astro";
import StoreIcon from "./resources/icons/StoreIcon.astro";
---

<header
  class="flex items-center w-full justify-between border-b dark:border-neutral-600 pb-2"
>
  <h3 class="font-bold">Editar lista</h3>

  <div class="flex flex-nowrap gap-2 justify-end">
    <button
      id="cleanList"
      title="Eliminar todo"
      class="bg-red-500 text-white inline-flex items-center font-semibold text-sm gap-1.5 px-2 py-1.5 rounded flex-nowrap text-nowrap transition hover:-translate-y-0.5"
      >Vaciar lista <DeleteIcon className="inline-block" /></button
    >
    <a
      href="/categories"
      title="Ver más productos"
      class="bg-orange-500 text-white inline-flex flex-nowrap items-center text-nowrap font-semibold text-sm gap-1.5 px-2 py-1.5 rounded transition hover:-translate-y-0.5"
    >
      Agregar
      <StoreIcon />
    </a>
  </div>
</header>
<main id="wishList" class=""></main>
<!-- Modal para eliminar todos los items de la lista -->
<dialog id="deleteListModal" class="backdrop:bg-neutral-700/30 dark:backdrop:bg-neutral-950/60 rounded-xl overflow-hidden bg-red-500">
  <div class="bg-yellow-50 dark:bg-neutral-600 p-4">
    <header class="dark:text-white flex flex-col gap-3 w-full justify-center items-center">
      <i class="text-red-500 rounded-full"
        ><svg
        class="bg-white rounded-full pb-1.5 size-14"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          style="fill: currentColor;transform: ;msFilter:;"
          ><path d="M11.001 10h2v5h-2zM11 16h2v2h-2z"></path><path
            d="M13.768 4.2C13.42 3.545 12.742 3.138 12 3.138s-1.42.407-1.768 1.063L2.894 18.064a1.986 1.986 0 0 0 .054 1.968A1.984 1.984 0 0 0 4.661 21h14.678c.708 0 1.349-.362 1.714-.968a1.989 1.989 0 0 0 .054-1.968L13.768 4.2zM4.661 19 12 5.137 19.344 19H4.661z"
          ></path></svg
        ></i
      > ¿Eliminar por completo la lista?
    </header>
    <p class="font-semibold dark:text-white">¿Estás seguro? <span class="text-red-500"> ¡Esta acción no se puede revertir!</span></p>
  </div>
  <footer class="flex justify-end items-center bg-orange-200 dark:bg-neutral-700 gap-2 px-4 py-2">
    <button id="btnDeleteList" class="px-3 py-1 bg-red-500 rounded text-white">Eliminar</button>
    <button id="closeModalDeleteList" class="px-3 py-1 bg-yellow-50 dark:bg-white rounded">Cerrar</button>
  </footer>
</dialog>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer components {
    .wish-item {
      @apply grid grid-rows-2 grid-cols-4 gap-x-4 xl:gap-x-7 items-end lg:grid-rows-1 lg:items-center dark:border-neutral-600 border-b pt-2 pb-4 lg:grid-cols-8;
    }
    .wish-item img {
      @apply w-full aspect-square max-w-24 row-span-2 place-self-center dark:bg-neutral-200 dark:rounded-lg;
    }
    .wish-item h5 {
      @apply col-span-3 lg:col-span-4 lg:pl-6 line-clamp-2 text-ellipsis;
    }
    .quantity-control {
      @apply text-nowrap flex gap-1.5 flex-nowrap items-center justify-between;
    }

    .wish-item .quantityBtn {
      @apply bg-transparent  bg-orange-500 text-yellow-50 max-w-8 inline-flex items-center justify-center p-0.5;
    }

    .price {
      @apply text-lg font-semibold text-right;
    }
    .wish-item button {
      @apply justify-self-end lg:self-center w-fit flex justify-end bg-red-500 p-1.5 rounded transition text-white active:scale-95;
    }
  }
</style>

<script>
  function getWishList() {
    //Si es la primera vez y no existe la lista de deseos, la creo
    let WishList = JSON.parse(localStorage.getItem("wishList")) || [];
    if (WishList.length === 0) {
      localStorage.setItem("wishList", JSON.stringify([])); //Comprueba si ya existe o no, y la crea
    }
    return WishList;
  }

  function wishList() {
    const localWishList = getWishList();
    const wishList = document.querySelector("#wishList");

    if (wishList) {
      if (localWishList.length === 0) {
        wishList.innerHTML = `<span class='col-span-full text-center inline-block pt-2'>¡La lista está vacia! <a href="/categories" class="text-orange-500 font-sembold"> ¡Agrega algun producto! </a></span>`;
      } else {
        wishList.innerHTML = ""; //Reseteo la lista

        localWishList.forEach((item) => {
          const itemCard = `<div class="wish-item">
        <img src="${item.image}" alt="${item.title}">
        <h5>${item.title}</h5>
        <div class="quantity-control">
          <button class='quantityBtn' title="Disminuir">
            <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-full">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15 12H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
          </button>
          <span>${item.quantity}</span>
          <button class='quantityBtn' title="Aumentar">
            <svg fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-full">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
          </button>
        </div>
        <p class="price">$${item.price}</p>
        <button title="Eliminar"><svg
        class="size-5"
          viewBox="0 0 24 24"
          style="fill: currentColor;transform: ;msFilter:;"
          ><path
            d="M5 20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8h2V6h-4V4a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v2H3v2h2zM9 4h6v2H9zM8 8h9v12H7V8z"
          ></path><path d="M9 10h2v8H9zm4 0h2v8h-2z"></path></svg
        ></button>
        </div>`;

          wishList.insertAdjacentHTML("beforeend", itemCard);
        });
      }
    }
  }

  function deleteAllList() {
    const deleteListModal = document.querySelector("#deleteListModal");
    const closeModalDeleteTask = document.querySelector(
      "#closeModalDeleteList"
    );

    const btnDelete = document.querySelector("#btnDeleteList");
    //@ts-ignore
    deleteListModal.showModal();

    closeModalDeleteTask.addEventListener("click", () => {
      //@ts-ignore
      deleteListModal.close();
    });
    // Escuchar clicks en el modal
    deleteListModal.addEventListener("click", (event) => {
      // Si el objetivo del click es el modal (y no su contenido), lo cerramos
      if (event.target === deleteListModal) {
        //@ts-ignore
        deleteListModal.close();
      }
    });

    // Remover cualquier listener previo antes de agregar uno nuevo
    const newBtnDelete = btnDelete.cloneNode(true);
    btnDelete.replaceWith(newBtnDelete);

    //Eliminar tarea si doy click al boton "Eliminar"
    newBtnDelete.addEventListener("click", () => {
      localStorage.setItem("wishList", JSON.stringify([]));
      //@ts-ignore
      deleteListModal.close();
      window.dispatchEvent(
        new CustomEvent("user:addedProduct", { detail: "Se vació la lista" })
      );
    });
  }

  document.addEventListener("astro:page-load", () => {
    const cleanList = document.querySelector("#cleanList");
    //Boton para vaciar toda la lista
    if (cleanList) {
      cleanList.addEventListener("click", deleteAllList);
      wishList();
    }
  });

  window.addEventListener("user:addedProduct", wishList);
</script>
